name: Deploy Vercel Preview on Comment

on:
  issue_comment:
    types: [created]

jobs:
  deploy-preview:
    if: startsWith(github.event.comment.body, '/preview')
    runs-on: ubuntu-latest

    steps:
      - name: Verify context
        id: verify
        run: |
          if [[ "${{ github.event.issue.pull_request.url }}" == "" ]]; then
            echo "ðŸš« This action only supports comments on PRs."
            exit 1
          fi

          COMMENTER=${{ github.event.comment.user.login }}
          echo "Commenter: $COMMENTER"
          echo "PR branch: ${{ github.head_ref }}"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Convert object to JSON
        run: |
          echo "${{ toJSON(context) }}"
          echo ">>>>>>>>>>>>>>>"
          echo "${{ toJSON(github) }}"

      - name: Get PR information
        id: pr_info
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.issue.number;
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            core.setOutput('branch', pullRequest.head.ref);

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ steps.pr_info.outputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_CLOUDFORET_TOKEN }}
        run: |
          BRANCH_NAME=${{ steps.pr_info.outputs.result }}
          echo "Deploying preview for branch $BRANCH_NAME"
          DEPLOY_URL=$(vercel --token $VERCEL_TOKEN --yes --env GITHUB_BRANCH=$BRANCH_NAME)
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const url = process.env.DEPLOY_URL;
            const commentBody = `ðŸš€ Preview deployed for branch \`${{ github.head_ref }}\`: [View Preview](${url})`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            })
