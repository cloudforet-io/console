name: "[CI]reflect branch update to master for old version"
on:
  repository_dispatch:
    types: [update_master_version_old]

jobs:
  reflect_branch_update:
    env:
      VERSION: ${{ github.event.client_payload.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: check version format
        run: |
          if [[ !(${{ env.VERSION }} =~ ^v[0-9]\.[0-9]?[0-9]\.[0-9]?[0-9](.*)$) ]];
            then exit 1
          fi
      - name: get existing official version
        run: |
          echo "current_major=$(cat src/VERSION | cut -c 2- | cut -d'.' -f1)" >> $GITHUB_ENV
          echo "current_minor=$(cat src/VERSION | cut -c 2- | cut -d'.' -f2 | cut -d'-' -f1)" >> $GITHUB_ENV
          echo "new_major=$(echo ${{ env.VERSION }} | cut -c 2- | cut -d'.' -f1)" >> $GITHUB_ENV
          echo "new_minor=$(echo ${{ env.VERSION }} | cut -c 2- | cut -d'.' -f2 | cut -d'-' -f1)" >> $GITHUB_ENV
      - name: Is new_ver is latest?
        run: |
          if [ $(echo ${{ env.current_major }}) \> $(echo ${{ env.new_major }}) ]
          then
            echo "LATEST_TAG=false" >> $GITHUB_ENV
          else
            if [ $(echo ${{ env.current_minor }}) \> $(echo ${{ env.new_minor }}) ]
            then
              echo "LATEST_TAG=false" >> $GITHUB_ENV
            else
              echo "LATEST_TAG=true" >> $GITHUB_ENV
            fi
          fi
      - 
        if: ${{ env.LATEST_TAG }} == 'true'
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - 
        name: Latest Update - update version file
        if: ${{ env.LATEST_TAG }} == 'true'
        run: |
          echo ${{ env.VERSION }} > src/VERSION
          if [[ $(cat src/VERSION) =~ v[0-9]\.[0-9]?[0-9]\.[0-9]?[0-9]\.([0-9]+) ]];
            then npm --no-git-tag-version version $(echo $(cat src/VERSION | cut -d'v' -f2 | cut -d '.' -f 1-3)-$(cat src/VERSION | cut -d'.' -f4))
            else npm --no-git-tag-version version $(cat src/VERSION | cut -d'v' -f2)
          fi
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[CI/CD] release version ${{ env.VERSION }}"
      - name: Push changes
        if: ${{ env.LATEST_TAG }} == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          branch: master