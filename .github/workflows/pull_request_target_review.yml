name: "[PR] Review"

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    path-ignores:
      - '.github/**'
      - '**/deploy/**'
      - '**/skaffold.template.yaml'
      - '**/Dockerfile'
      - '**/*.dockerfile'
      - '**/*.dockerignore'
      - '**/LICENSE'
      - '**/AUTHORS'
      - '**/.husky/**'
      - '**/commitlint.config.js'
      - '**/.lintstagedrc.js'
      - '**/*.md'
      - '**/*.env'
    branches:
      - master
      - feature-*
    workflow_dispatch:

jobs:
  review:
    runs-on: ubuntu-latest

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_API: 'http://localhost:3000'

    services:
      turbo_cache:
        image: ${{ secrets.TURBO_CACHE_SERVER_IMAGE }}
        env:
          PORT: 3000
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          STORAGE_PROVIDER: git-repository
          STORAGE_PATH: console-artifacts
          GIT_REPOSITORY: ${{ vars.TURBO_CACHE_SERVER_GIT_REPOSITORY }}
          GIT_BRANCH: ${{ vars.TURBO_CACHE_SERVER_GIT_BRANCH }}
          GIT_USER_NAME: ${{ vars.GIT_USERNAME }}
          GIT_USER_EMAIL: ${{ vars.GIT_EMAIL }}
          GIT_USER_PASSWORD: ${{ secrets.PAT_TOKEN }}
        ports:
          - 3000:3000
        options: >-
          --health-cmd "curl -f GET 'http://localhost:3000/v8/artifacts/status' -H 'Authorization: Bearer $TURBO_TOKEN'"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10
          --health-start-period 30s

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Restore cached node_modules
        id: restore-node-cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-modules-

      - name: Install dependencies
        if: steps.restore-node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build Packages
        run: npm run build -- --filter="./packages/*" --parallel

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

      - name: Build Apps
        run: npm run build -- --filter="./apps/*" --parallel
