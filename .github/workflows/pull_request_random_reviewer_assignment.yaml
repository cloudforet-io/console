name: "[Pull Request] Pick Random Reviwer"

on:
  issue_comment:
    types: [created]
  pull_request_target:
      types: 
        - opened
  workflow_dispatch:


jobs:
  pick-random-reviwer:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/review-request')) ||
      (github.event_name == 'pull_request_target' && (github.base_ref == 'master' || github.base_ref == 'develop') && !contains(github.event.pull_request.body, '- [x] Previously reviewed in feature branch, no further review needed'))
    runs-on: ubuntu-latest
    env:
      GROUP1: '["WANZARGEN", "sulmoJ", "skdud4659", "piggggggggy"]'
      GROUP2: '["kkdy21", "seungyeoneeee", "Hansoo-mzc"]'
    steps:
      - uses: actions/checkout@v3
      
      - name: Pick Random Reviewer and Add Comment
        id: pick_random_reviewer 
        uses: actions/github-script@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const group1 = JSON.parse(process.env.GROUP1);
            const group2 = JSON.parse(process.env.GROUP2);
            console.log('group1:', group1, 'group2:', group2);
            
            const randomReviewer1 = group1[Math.floor(Math.random() * group1.length)];
            const randomReviewer2 = group2[Math.floor(Math.random() * group2.length)];
            console.log('randomReviewer1:', randomReviewer1, 'randomReviewer2:', randomReviewer2);
            
            // Add comment
            const comment = `üéâ @${randomReviewer1} and @${randomReviewer2} have been randomly selected as the reviewers! Please review. üôè`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })
            
            // Add reviewers
            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              reviewers: [randomReviewer1, randomReviewer2],
            });
            