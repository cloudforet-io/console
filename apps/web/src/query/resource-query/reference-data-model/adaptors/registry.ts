
import {
    useAppReferenceDataModel,
    useWorkspaceReferenceDataModel,
    useWorkspaceGroupReferenceDataModel,
    useUserReferenceDataModel,
    useWorkspaceUserReferenceDataModel,
    useUserGroupReferenceDataModel,
    useProvodierReferenceDataModel,
    useProtocolReferenceDataModel,
    useCloudServiceTypeReferenceDataModel,
    useCollectorReferenceDataModel,
    useCostDataSourceReferenceModel,
    useMetricReferenceDataModel,
    useNamespaceReferenceDataModel,
    useProjectReferenceDataModel,
    useProjectGroupReferenceDataModel,
    useRoleReferenceDataModel,
    useRegionReferenceDataModel,
    useSecretReferenceDataModel,
    usePluginReferenceDataModel,
    useServiceAccountReferenceDataModel,
    useTrustedAccountReferenceDataModel,
    useAlertManagerWebhookReferenceDataModel,
    useMonitoringWebhookReferenceDataModel,
    useServiceReferenceDataModel,
    useAlertManagerEscalationPolicyReferenceDataModel,
    useMonitoringEscalationPolicyReferenceDataModel,
} from '@/query/resource-query/reference-data-model/adaptors/implementations';

export const referenceDataModelMap = {
    app: useAppReferenceDataModel,
    workspace: useWorkspaceReferenceDataModel,
    workspaceGroup: useWorkspaceGroupReferenceDataModel,
    user: useUserReferenceDataModel,
    workspaceUser: useWorkspaceUserReferenceDataModel,
    userGroup: useUserGroupReferenceDataModel,
    provider: useProvodierReferenceDataModel,
    protocol: useProtocolReferenceDataModel,
    cloudServiceType: useCloudServiceTypeReferenceDataModel,
    collector: useCollectorReferenceDataModel,
    costDataSource: useCostDataSourceReferenceModel,
    metric: useMetricReferenceDataModel,
    namespace: useNamespaceReferenceDataModel,
    project: useProjectReferenceDataModel,
    projectGroup: useProjectGroupReferenceDataModel,
    role: useRoleReferenceDataModel,
    region: useRegionReferenceDataModel,
    secret: useSecretReferenceDataModel,
    plugin: usePluginReferenceDataModel,
    serviceAccount: useServiceAccountReferenceDataModel,
    trustedAccount: useTrustedAccountReferenceDataModel,
    alertManagerWebhook: useAlertManagerWebhookReferenceDataModel,
    monitoringWebhook: useMonitoringWebhookReferenceDataModel,
    service: useServiceReferenceDataModel,
    alertManagerEscalationPolicy: useAlertManagerEscalationPolicyReferenceDataModel,
    monitoringEscalationPolicy: useMonitoringEscalationPolicyReferenceDataModel,
};
